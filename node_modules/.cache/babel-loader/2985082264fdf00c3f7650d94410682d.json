{"ast":null,"code":"var _jsxFileName = \"/home/appinventiv/form/src/Components/Pages/Log_in.js\",\n    _s = $RefreshSig$();\n\nimport { useFormik } from \"formik\";\nimport Input from \"../Input\";\nimport { Button } from \"@mui/material\";\nimport { validationSchema } from \"../../Schemas/FormSchema\";\nimport GoogleLogin from \"../../Components/GoogleLogin\";\nimport app from \"../../Firebase/Firebase\"; // import { GoogleAuthProvider } from \"firebase/auth\";\n\nimport { getAuth, signInWithPopup, GoogleAuthProvider } from \"firebase/auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst provider = new GoogleAuthProvider();\n\nfunction Sign() {\n  _s();\n\n  const {\n    handleSubmit,\n    touched,\n    errors,\n    getFieldProps\n  } = useFormik({\n    initialValues: {\n      email: \"\",\n      password: \"\"\n    },\n    onSubmit: values => {\n      console.log(values);\n    },\n    validationSchema\n  });\n\n  function SignIn() {\n    const auth = getAuth();\n    signInWithPopup(auth, provider).then(result => {\n      // This gives you a Google Access Token. You can use it to access the Google API.\n      const credential = GoogleAuthProvider.credentialFromResult(result);\n      const token = credential.accessToken; // The signed-in user info.\n\n      const user = result.user;\n      console.log(user); // ...\n    }).catch(error => {\n      // Handle Errors here.\n      const errorCode = error.code;\n      const errorMessage = error.message; // The email of the user's account used.\n\n      const email = error.email; // The AuthCredential type that was used.\n\n      const credential = GoogleAuthProvider.credentialFromError(error); // ...\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form_container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Log in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          icon: \"far fa-envelope\",\n          placeholder: \"Email ID\",\n          type: \"email\",\n          ...getFieldProps(\"email\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), touched.email && errors.email ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"errorMessage\",\n          children: [\"*\", errors.email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this) : null, /*#__PURE__*/_jsxDEV(Input, {\n          icon: \"fas fa-key\",\n          placeholder: \"Password\",\n          type: \"password\",\n          ...getFieldProps(\"password\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), touched.password && errors.password ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"errorMessage\",\n          children: [\"*\", errors.password]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this) : null, /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          fullWidth: true,\n          variant: \"contained\",\n          children: \" Login \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(GoogleLogin, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: SignIn,\n          children: \"Login with firebase\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Sign, \"1Cp1yl4hESDYzlRUtZInWNJsFOw=\", false, function () {\n  return [useFormik];\n});\n\n_c = Sign;\nexport default Sign;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sign\");","map":{"version":3,"sources":["/home/appinventiv/form/src/Components/Pages/Log_in.js"],"names":["useFormik","Input","Button","validationSchema","GoogleLogin","app","getAuth","signInWithPopup","GoogleAuthProvider","provider","Sign","handleSubmit","touched","errors","getFieldProps","initialValues","email","password","onSubmit","values","console","log","SignIn","auth","then","result","credential","credentialFromResult","token","accessToken","user","catch","error","errorCode","code","errorMessage","message","credentialFromError"],"mappings":"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","sourcesContent":["import { useFormik } from \"formik\";\nimport Input from \"../Input\";\nimport { Button } from \"@mui/material\";\nimport { validationSchema } from \"../../Schemas/FormSchema\";\nimport GoogleLogin from \"../../Components/GoogleLogin\";\nimport app from \"../../Firebase/Firebase\";\n// import { GoogleAuthProvider } from \"firebase/auth\";\nimport { getAuth, signInWithPopup, GoogleAuthProvider } from \"firebase/auth\";\n\nconst provider = new GoogleAuthProvider();\n\nfunction Sign() {\n  const {\n    handleSubmit,\n    touched,\n    errors,\n    getFieldProps,\n  } = useFormik({\n    initialValues: {\n      email: \"\",\n      password: \"\",\n    },\n    onSubmit: (values) => {\n      console.log(values);\n    },\n    validationSchema,\n  });\n  function SignIn(){\n    const auth = getAuth();\n    signInWithPopup(auth, provider)\n      .then((result) => {\n        // This gives you a Google Access Token. You can use it to access the Google API.\n        const credential = GoogleAuthProvider.credentialFromResult(result);\n        const token = credential.accessToken;\n        // The signed-in user info.\n        const user = result.user;\n        console.log(user);\n        // ...\n      }).catch((error) => {\n        // Handle Errors here.\n        const errorCode = error.code;\n        const errorMessage = error.message;\n        // The email of the user's account used.\n        const email = error.email;\n        // The AuthCredential type that was used.\n        const credential = GoogleAuthProvider.credentialFromError(error);\n        // ...\n      });\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"form_container\">\n        <h1>Log in</h1>\n        <form onSubmit={handleSubmit}>\n          <Input\n            icon={\"far fa-envelope\"}\n            placeholder={\"Email ID\"}\n            type={\"email\"}\n            {...getFieldProps(\"email\")}\n          />\n          {touched.email && errors.email ? (\n            <div className=\"errorMessage\">*{errors.email}</div>\n          ) : null}\n\n          <Input\n            icon={\"fas fa-key\"}\n            placeholder={\"Password\"}\n            type=\"password\"\n            {...getFieldProps(\"password\")}\n          />\n          {touched.password && errors.password ? (\n            <div className=\"errorMessage\">*{errors.password}</div>\n          ) : null}\n\n          <Button type={\"submit\"} fullWidth variant=\"contained\"> Login </Button>\n           <GoogleLogin />\n         <button onClick ={SignIn}>Login with firebase</button>\n\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default Sign;\n"]},"metadata":{},"sourceType":"module"}